pub const generic_linux = struct {
    pub const OPOST = 0o0000001;
    pub const OLCUC = 0o0000002;
    pub const ONLCR = 0o0000004;
    pub const OCRNL = 0o0000010;
    pub const ONOCR = 0o0000020;
    pub const ONLRET = 0o0000040;
    pub const OFILL = 0o0000100;
    pub const OFDEL = 0o0000200;
    //pub const NLDLY = 0o0000400;
    //pub const NL0 = 0o0000000;
    pub const NL1 = 0o0000400;
    //pub const CRDLY = 0o0003000;
    //pub const CR0 = 0o0000000;
    pub const CR1 = 0o0001000;
    pub const CR2 = 0o0002000;
    //pub const CR3 = 0o0003000;
    //pub const TABDLY = 0o0014000;
    //pub const TAB0 = 0o0000000;
    pub const TAB1 = 0o0004000;
    pub const TAB2 = 0o0010000;
    //pub const TAB3 = 0o0014000;
    //pub const BSDLY = 0o0020000;
    //pub const BS0 = 0o0000000;
    pub const BS1 = 0o0020000;
    //pub const FFDLY = 0o0100000;
    //pub const FF0 = 0o0000000;
    pub const FF1 = 0o0100000;
    //pub const VTDLY = 0o0040000;
    //pub const VT0 = 0o0000000;
    pub const VT1 = 0o0040000;
};

pub const linux_all_ppc = struct {
    pub const OPOST = 0o0000001;
    pub const ONLCR = 0o0000002;
    pub const OLCUC = 0o0000004;
    pub const OCRNL = 0o0000010;
    pub const ONOCR = 0o0000020;
    pub const ONLRET = 0o0000040;
    pub const OFILL = 0o0000100;
    pub const OFDEL = 0o0000200;
    //pub const NLDLY = 0o0001400;
    //pub const NL0 = 0o0000000;
    pub const NL1 = 0o0000400;
    pub const NL2 = 0o0001000;
    //pub const NL3 = 0o0001400;
    //pub const TABDLY = 0o0006000;
    //pub const TAB0 = 0o0000000;
    pub const TAB1 = 0o0002000;
    pub const TAB2 = 0o0004000;
    //pub const TAB3 = 0o0006000;
    //pub const CRDLY = 0o0030000;
    //pub const CR0 = 0o0000000;
    pub const CR1 = 0o0010000;
    pub const CR2 = 0o0020000;
    //pub const CR3 = 0o0030000;
    //pub const FFDLY = 0o0040000;
    //pub const FF0 = 0o0000000;
    pub const FF1 = 0o0040000;
    //pub const BSDLY = 0o0100000;
    //pub const BS0 = 0o0000000;
    pub const BS1 = 0o0100000;
    //pub const VTDLY = 0o0200000;
    //pub const VT0 = 0o0000000;
    pub const VT1 = 0o0200000;
};

pub const darwin = struct {
    pub const OPOST = 0x00000001; //enable following output processing
    pub const ONLCR = 0x00000002; // map NL to CR-NL (ala CRMOD)
    pub const OXTABS = 0x00000004; // expand tabs to spaces
    pub const ONOEOT = 0x00000008; // discard EOT's (^D) on output)

    pub const OCRNL = 0x00000010; // map CR to NL on output
    pub const ONOCR = 0x00000020; // no CR output at column 0
    pub const ONLRET = 0x00000040; // NL performs CR function
    pub const OFILL = 0x00000080; // use fill characters for delay
    //pub const NLDLY = 0x00000300; // \n delay
    //pub const TABDLY = 0x00000c04; // horizontal tab delay
    //pub const CRDLY = 0x00003000; // \r delay
    //pub const FFDLY = 0x00004000; // form feed delay
    //pub const BSDLY = 0x00008000; // \b delay
    //pub const VTDLY = 0x00010000; // vertical tab delay
    pub const OFDEL = 0x00020000; // fill is DEL, else NUL

    //pub const NL0 = 0x00000000;
    pub const NL1 = 0x00000100;
    pub const NL2 = 0x00000200;
    //pub const NL3 = 0x00000300;
    //pub const TAB0 = 0x00000000;
    pub const TAB1 = 0x00000400;
    pub const TAB2 = 0x00000800;
    //pub const TAB3 = 0x00000004;
    //pub const CR0 = 0x00000000;
    pub const CR1 = 0x00001000;
    pub const CR2 = 0x00002000;
    //pub const CR3 = 0x00003000;
    //pub const FF0 = 0x00000000;
    pub const FF1 = 0x00004000;
    //pub const BS0 = 0x00000000;
    pub const BS1 = 0x00008000;
    //pub const VT0 = 0x00000000;
    pub const VT1 = 0x00010000;
};

pub const netbsd = struct {
    pub const OPOST = 0x00000001; // enable following output processing
    pub const ONLCR = 0x00000002; // map NL to CR-NL (ala CRMOD)
    pub const OXTABS = 0x00000004; // expand tabs to spaces
    pub const ONOEOT = 0x00000008; // discard EOT's (^D) on output
    pub const OCRNL = 0x00000010; // map CR to NL
    pub const ONOCR = 0x00000040; // discard CR's when on column 0
    pub const ONLRET = 0x00000080; // move to column 0 on CR
};

pub const openbsd = struct {
    pub const OPOST = 0x00000001; // enable following output processing
    pub const ONLCR = 0x00000002; // map NL to CR-NL (ala CRMOD)
    pub const OXTABS = 0x00000004; // expand tabs to spaces
    pub const ONOEOT = 0x00000008; // discard EOT's (^D) on output
    pub const OCRNL = 0x00000010; // map CR to NL
    pub const OLCUC = 0x00000020; // translate lower case to upper case
    pub const ONOCR = 0x00000040; // No CR output at column 0
    pub const ONLRET = 0x00000080; // NL performs the CR function
};

pub const freebsd = struct {
    pub const OPOST = 0x00000001; //	/* enable following output processing */
    pub const ONLCR = 0x00000002; //	/* map NL to CR-NL (ala CRMOD) */
    //pub const TABDLY = 0x00000004; //	/* tab delay mask */
    //pub const TAB0 = 0x00000000; //	    /* no tab delay and expansion */
    //pub const TAB3 = 0x00000004; //	    /* expand tabs to spaces */
    pub const ONOEOT = 0x00000008; //	/* discard EOT's (^D) on output) */
    pub const OCRNL = 0x00000010; //	/* map CR to NL on output */
    pub const ONOCR = 0x00000020; //	/* no CR output at column 0 */
    pub const ONLRET = 0x00000040; //	/* NL performs CR function */
};

pub const dragonfly = struct {
    pub const OPOST = 0x00000001; //	/* enable following output processing */
    pub const ONLCR = 0x00000002; //	/* map NL to CR-NL (ala CRMOD) */
    //pub const TABDLY = 0x00000004; //	/* tab delay mask */
    //pub const TAB0 = 0x00000000; //	    /* no tab delay and expansion */
    //pub const TAB3 = 0x00000004; //	    /* expand tabs to spaces */
    //pub const OXTABS = TAB3; //
    pub const ONOEOT = 0x00000008; //	/* discard EOT's (^D) on output) */
    pub const OCRNL = 0x00000010; //	/* map CR to NL on output */
    pub const ONOCR = 0x00000020; //	/* no CR output at column 0 */
    pub const ONLRET = 0x00000040; //	/* NL performs CR function */
};

pub const haiku = struct {
    pub const OPOST = 0x01; //		/* enable postprocessing of output */
    pub const OLCUC = 0x02; //		/* map lowercase to uppercase */
    pub const ONLCR = 0x04; //		/* map NL to CR-NL on output */
    pub const OCRNL = 0x08; //		/* map CR to NL on output */
    pub const ONOCR = 0x10; //		/* no CR output when at column 0 */
    pub const ONLRET = 0x20; //		/* newline performs CR function */
    pub const OFILL = 0x40; //		/* use fill characters for delays */
    pub const OFDEL = 0x80; //		/* Fills are DEL, otherwise NUL */
    //pub const NLDLY = 0x100; //		/* Newline delays: */
    //pub const NL0 = 0x000; //
    pub const NL1 = 0x100; //
    //pub const CRDLY = 0x600; //		/* Carriage return delays: */
    //pub const CR0 = 0x000; //
    pub const CR1 = 0x200; //
    pub const CR2 = 0x400; //
    //pub const CR3 = 0x600; //
    //pub const TABDLY = 0x1800; //		/* Tab delays: */
    //pub const TAB0 = 0x0000; //
    pub const TAB1 = 0x0800; //
    pub const TAB2 = 0x1000; //
    //pub const TAB3 = 0x1800; //
    //pub const BSDLY = 0x2000; //		/* Backspace delays: */
    //pub const BS0 = 0x0000; //
    pub const BS1 = 0x2000; //
    //pub const VTDLY = 0x4000; //		/* Vertical tab delays: */
    //pub const VT0 = 0x0000; //
    pub const VT1 = 0x4000; //
    //pub const FFDLY = 0x8000; //		/* Form feed delays: */
    //pub const FF0 = 0x0000; //
    pub const FF1 = 0x8000; //
};

pub const illumos = struct {
    pub const OPOST = 0o0000001; //
    pub const OLCUC = 0o0000002; //
    pub const ONLCR = 0o0000004; //
    pub const OCRNL = 0o0000010; //
    pub const ONOCR = 0o0000020; //
    pub const ONLRET = 0o0000040; //
    pub const OFILL = 0o0000100; //
    pub const OFDEL = 0o0000200; //
    //pub const NLDLY = 0o0000400; //
    //pub const NL0 = 0o0; //
    pub const NL1 = 0o0000400; //
    //pub const CRDLY = 0o0003000; //
    //pub const CR0 = 0o0; //
    pub const CR1 = 0o0001000; //
    pub const CR2 = 0o0002000; //
    //pub const CR3 = 0o0003000; //
    //pub const TABDLY = 0o0014000; //
    //pub const TAB0 = 0o0; //
    pub const TAB1 = 0o0004000; //
    pub const TAB2 = 0o0010000; //
    //pub const TAB3 = 0o0014000; //
    //pub const XTABS = 0o0014000; //
    //pub const BSDLY = 0o0020000; //
    //pub const BS0 = 0o0; //
    pub const BS1 = 0o0020000; //
    //pub const VTDLY = 0o0040000; //
    //pub const VT0 = 0o0; //
    pub const VT1 = 0o0040000; //
    //pub const FFDLY = 0o0100000; //
    //pub const FF0 = 0o0; //
    pub const FF1 = 0o0100000; //
    pub const PAGEOUT = 0o0200000; //
    pub const WRAP = 0o0400000; //
};

pub const wasi = struct {
    pub const OPOST = 0o0000001; //
    pub const OLCUC = 0o0000002; //
    pub const ONLCR = 0o0000004; //
    pub const OCRNL = 0o0000010; //
    pub const ONOCR = 0o0000020; //
    pub const ONLRET = 0o0000040; //
    pub const OFILL = 0o0000100; //
    pub const OFDEL = 0o0000200; //
    //pub const NLDLY = 0o0000400; //
    //pub const NL0 = 0o0000000; //
    pub const NL1 = 0o0000400; //
    //pub const CRDLY = 0o0003000; //
    //pub const CR0 = 0o0000000; //
    pub const CR1 = 0o0001000; //
    pub const CR2 = 0o0002000; //
    //pub const CR3 = 0o0003000; //
    //pub const TABDLY = 0o0014000; //
    //pub const TAB0 = 0o0000000; //
    pub const TAB1 = 0o0004000; //
    pub const TAB2 = 0o0010000; //
    //pub const TAB3 = 0o0014000; //
    //pub const BSDLY = 0o0020000; //
    //pub const BS0 = 0o0000000; //
    pub const BS1 = 0o0020000; //
    //pub const FFDLY = 0o0100000; //
    //pub const FF0 = 0o0000000; //
    pub const FF1 = 0o0100000; //
    //pub const VTDLY = 0o0040000; //
    //pub const VT0 = 0o0000000; //
    pub const VT1 = 0o0040000; //
};

pub const emscripten = struct {
    pub const OPOST = 0o0000001; //
    pub const OLCUC = 0o0000002; //
    pub const ONLCR = 0o0000004; //
    pub const OCRNL = 0o0000010; //
    pub const ONOCR = 0o0000020; //
    pub const ONLRET = 0o0000040; //
    pub const OFILL = 0o0000100; //
    pub const OFDEL = 0o0000200; //
    //pub const NLDLY = 0o0000400; //
    //pub const NL0 = 0o0000000; //
    pub const NL1 = 0o0000400; //
    //pub const CRDLY = 0o0003000; //
    //pub const CR0 = 0o0000000; //
    pub const CR1 = 0o0001000; //
    pub const CR2 = 0o0002000; //
    //pub const CR3 = 0o0003000; //
    //pub const TABDLY = 0o0014000; //
    //pub const TAB0 = 0o0000000; //
    pub const TAB1 = 0o0004000; //
    pub const TAB2 = 0o0010000; //
    //pub const TAB3 = 0o0014000; //
    //pub const BSDLY = 0o0020000; //
    //pub const BS0 = 0o0000000; //
    pub const BS1 = 0o0020000; //
    //pub const FFDLY = 0o0100000; //
    //pub const FF0 = 0o0000000; //
    pub const FF1 = 0o0100000; //
    //pub const VTDLY = 0o0040000; //
    //pub const VT0 = 0o0000000; //
    pub const VT1 = 0o0040000; //
};
